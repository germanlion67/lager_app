name: Release - Build and Deploy

permissions:
  contents: write
  
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.3.4)'
        required: true
        type: string

jobs:
  create-tag:
    name: Create Version Tag
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.create_tag.outputs.tag_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create and push tag
        id: create_tag
        run: |
          TAG_NAME="v${{ github.event.inputs.version }}"
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          git tag -a "$TAG_NAME" -m "Release version ${{ github.event.inputs.version }}"
          git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/germanlion67/lager_app.git "$TAG_NAME"


  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: create-tag
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.create-tag.outputs.tag_name }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze

      - name: Run tests
        run: flutter test

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: [create-tag, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.create-tag.outputs.tag_name }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Build App Bundle
        run: flutter build appbundle --release

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-${{ github.event.inputs.version }}
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: android-bundle-${{ github.event.inputs.version }}
          path: build/app/outputs/bundle/release/app-release.aab

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    needs: [create-tag, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.create-tag.outputs.tag_name }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows --release

      - name: Create Windows Archive
        run: |
          Compress-Archive -Path build/windows/x64/runner/Release/* -DestinationPath windows-release-${{ github.event.inputs.version }}.zip

      - name: Upload Windows Build
        uses: actions/upload-artifact@v4
        with:
          name: windows-release-${{ github.event.inputs.version }}
          path: windows-release-${{ github.event.inputs.version }}.zip

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [create-tag, test, build-android, build-windows]
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.create-tag.outputs.tag_name }}
          name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false
          files: |
            android-apk-${{ github.event.inputs.version }}/app-release.apk
            android-bundle-${{ github.event.inputs.version }}/app-release.aab
            windows-release-${{ github.event.inputs.version }}/windows-release-${{ github.event.inputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
